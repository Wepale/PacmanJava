#BlueJ class context
comment0.params=
comment0.target=Fantasmas()
comment0.text=\r\n\ Inicializa\ la\ imagen\ azul\ de\ todos\ los\ fantasmas\r\n
comment1.params=
comment1.target=java.awt.Image\ getImagenAzul()
comment1.text=\r\n\ Devuelve\ la\ imagen\ azul\ de\ los\ fantasmas\r\n\ \r\n\ @return\ imagenAzul\ El\ campo\ imagenAzul\r\n
comment10.params=pacman\ tablero
comment10.target=Coordenadas\ buscarCalleHorizontal(PacMan,\ Tablero)
comment10.text=\r\n\ Este\ metodo\ se\ utiliza\ cuando\ el\ fantasma\ tiene\ que\ moverse\ de\ forma\ horizontal\ para\ acercarse\ a\ PacMan\r\n\ pero\ hay\ un\ muro.\ Por\ lo\ tanto\ este\ metodo\ encuentra\ el\ camino\ mas\ corto\ hac\u00EDa\ una\ calle\ que\ permita\r\n\ acercarse\ a\ PacMan.\ \r\n\ \r\n\ Si\ el\ fantasma\ necesita\ moverse\ hacia\ la\ izquierda\ o\ hacia\ la\ derecha\ pero\ hay\ un\ muro\:\r\n\ \r\n\ 1\u00BA\ Caso\:\ si\ Pacman\ se\ encuentra\ justo\ en\ la\ misma\ fila,\ este\ metodo\ buscara\ la\ calle\ m\u00E1s\r\n\ pr\u00F3xima\ por\ la\ que\ pueda\ desplazarse\ hacia\ la\ izquierda\ o\ la\ derecha\ segun\ la\ posicion\ de\ Pacman.\r\n\ \r\n\ 2\u00BA\ Caso\ \:En\ caso\ de\ que\ Pacman\ se\ encuentre\ encima/abajo\ del\ fantasma\ buscara\ la\ primera\ calle\r\n\ hacia\ arriba/abajo\ por\ la\ que\ pueda\ desplazarse\ hacia\ la\ izquierda\ o\ la\ derecha(Depende\ de\ si\ pacamn\ esta\ a\ la\ derecha\ o\ a\ la\ izquierda\ del\ fantasma).\r\n\ En\ el\ caso\ de\ que\ no\ haya\ ninguna\ calle\ en\ esa\ direcci\u00F3n\ buscar\u00E1\ una\ en\ la\ direccion\ contraria.\r\n\ \r\n\ @param\ pacman\ Nuestro\ Pacman,\ para\ saber\ donde\ se\ encuentra\r\n\ @param\ tablero\ El\ tablero,\ necesario\ para\ encontrar\ el\ camino\r\n\ @return\ Coordenadas\ La\ primera\ casilla\ hacia\ la\ calle\ que\ hemos\ encontrado\r\n\ \r\n
comment11.params=pacman\ tablero
comment11.target=Coordenadas\ buscarCalleVertical(PacMan,\ Tablero)
comment11.text=\r\n\ Este\ m\u00E9todo\ se\ utiliza\ cuando\ el\ fantasma\ tiene\ que\ moverse\ de\ forma\ vertical\ para\ acercarse\ a\ PacMan\r\n\ pero\ hay\ un\ muro.\ Por\ lo\ tanto\ este\ m\u00E9todo\ encuentra\ el\ camino\ mas\ corto\ hacia\ una\ calle\ que\ permita\r\n\ acercarse\ a\ PacMan.\ \r\n\ \r\n\ Si\ el\ fantasma\ necesita\ moverse\ hacia\ abajo\ o\ hacia\ arriba\ pero\ hay\ un\ muro\:\r\n\ \r\n\ 1\u00BA\ Caso\:\ si\ Pacman\ se\ encuentra\ justo\ en\ la\ misma\ columna,\ este\ metodo\ buscara\ la\ calle\ m\u00E1s\r\n\ pr\u00F3xima\ por\ la\ que\ pueda\ desplazarse\ hacia\ abajo\ o\ hacia\ arriba\r\n\ \r\n\ 2\u00BA\ Caso\ \:En\ caso\ de\ que\ Pacman\ se\ encuentre\ a\ la\ izquierda/derecha\ del\ fantasma\ buscara\ la\ primera\ calle\r\n\ hacia\ la\ izquierda/izquierda\ por\ la\ que\ pueda\ desplazarse\ hacia\ abajo\ o\ hacia\ arriba.En\ la\ caso\ de\ que\ no\ haya\ ninguna\ calle\r\n\ en\ esa\ direcci\u00F3n\ buscara\ una\ en\ la\ direccion\ contraria.\r\n\ \r\n\ @param\ pacman\ Nuestro\ Pacman,\ para\ saber\ donde\ se\ encuentra\r\n\ @param\ tablero\ El\ tablero,\ necesario\ para\ encontrar\ el\ camino\r\n\ @return\ Coordenadas\ La\ primera\ casilla\ hacia\ la\ calle\ que\ hemos\ encontrado\r\n\ \r\n
comment12.params=pacman\ tablero
comment12.target=Coordenadas\ calcularMovimiento(PacMan,\ Tablero)
comment12.text=\r\n\ Calcula\ del\ movimiento\ del\ fantasma.\ Cada\ fantasma\ reescribira\ este\ metodo\ con\ su\r\n\ correspondiente\ movimiento\ \r\n\ @param\ pacman\ Nuestro\ pacman,\ necesitamos\ saber\ donde\ est\u00E1\ para\ calcular\r\n\ el\ movimiento\ de\ los\ fantasmas\r\n\ @param\ tablero\ Nuestro\ tablero\ \r\n
comment2.params=pacman
comment2.target=int\ calcularDistanciaColumnas(PacMan)
comment2.text=\r\n\ Este\ m\u00E9todo\ se\ usa\ para\ saber\ la\ distancia\ en\ columnas\ que\ existe\ entre\ el\ fantasma\ y\ Pacman.\r\n\ \r\n\ Si\ la\ distancia\ es\ negativa\ Pacman\ se\ encuentra\ a\ la\ derecha\ del\ fantasma\r\n\ Si\ la\ distancia\ es\ positiva\ Pacman\ se\ encuentra\ a\ la\ izquierda\ del\ fantasma\r\n\ \r\n\ NOTA\:\ Este\ m\u00E9todo\ he\ decidio\ utilizarlo\ por\ que\ necesito\ calcular\ en\ varios\ lugares\r\n\ la\ distancia\ entre\ los\ fantasmas\ y\ pacman,\ por\ lo\ que\ as\u00ED\ evito\ la\ reescritura\ de\ codigo\r\n
comment3.params=pacman
comment3.target=int\ calcularDistanciaFilas(PacMan)
comment3.text=\r\n\ Este\ m\u00E9todo\ se\ usa\ para\ saber\ la\ distancia\ en\ filas\ que\ existe\ entre\ el\ fantasma\ y\ Pacman.\r\n\ \r\n\ Si\ la\ distancia\ es\ negativa\ PacMan\ se\ encuentra\ debajo\ del\ fantasma\r\n\ Si\ la\ distancia\ es\ positiva\ Pacman\ se\ encuentra\ encima\ del\ fantasma\r\n\ \r\n\ NOTA\:\ Este\ m\u00E9todo\ he\ decidio\ utilizarlo\ por\ que\ necesito\ calcular\ en\ varios\ lugares\r\n\ la\ distancia\ entre\ los\ fantasmas\ y\ pacman,\ por\ lo\ que\ as\u00ED\ evito\ la\ reescritura\ de\ codigo\r\n
comment4.params=pacman
comment4.target=int\ dondeMoverseHorizontal(PacMan)
comment4.text=\r\n\ Este\ m\u00E9todo\ se\ usa\ para\ saber\ hacia\ que\ direcci\u00F3n\ se\ tiene\ que\ mover\ el\ fantama\ para\ acercarce\r\n\ horizontalmente\ a\ Pacman\r\n\ \r\n\ @param\ pacman\ Un\ objeto\ tipo\ pacman\ para\ saber\ donde\ se\ encuentra\r\n\ @return\ 1\ si\ se\ mueve\ a\ la\ izquierda,\ 2\ si\ se\ mueve\ a\ la\ derecha,\ 0\ si\ se\ encuntra\ en\ la\ misma\ columna\r\n
comment5.params=pacman
comment5.target=int\ dondeMoverseVertical(PacMan)
comment5.text=\r\n\ Este\ m\u00E9todo\ se\ usa\ para\ saber\ hacia\ que\ direcci\u00F3n\ se\ tiene\ que\ mover\ el\ fantasma\ para\ acercarse\r\n\ verticalmente\ a\ Pacman.\r\n\ @param\ pacman\ Un\ objeto\ tipo\ pacman\ para\ saber\ donde\ se\ encuentra\r\n\ @return\ 1\ si\ se\ mueve\ hacia\ arriba,\ 2\ si\ se\ mueve\ \ hacia\ abajo,\ 0\ si\ se\ encuntra\ en\ la\ misma\ fila\r\n
comment6.params=sentidoHorizontal\ sentidoVertical\ tablero
comment6.target=int\ primeraCalleVertical(int,\ int,\ Tablero)
comment6.text=\r\n\ Este\ metodo\ sirve\ para\ encontrar\ la\ primera\ calle\ vertical\ por\ la\ que\ pueda\ circular\ el\ fantasma.\ La\ direcci\u00F3n\ de\ la\ busqueda\ se\ selecciona\ mediante\r\n\ sus\ parametros.\ Este\ m\u00E9todo\ solo\ funcionara\ correctamente\ con\ los\ siguientes\ valores\ para\ los\ parametros\:\ 1\ ,\ -1.\r\n\ \r\n\ @\ param\ sentidoHorizontal\ Dependiendo\ del\ valor\ del\ parametro\ buscaremos\ hacia\ una\ direcci\u00F3n\ la\ primera\ calle\ vertical\ .Si\ el\ valor\r\n\ es\ -1,\ buscar\u00E1\ la\ calle\ hacia\ la\ izquierda,\ y\ si\ el\ valor\ es\ 1\ buscara\ la\ calle\ hacia\ la\ derecha\r\n\ \r\n\ @param\ sentidoVertical\ Dependiendo\ del\ valor\ del\ parametro\ indicaremos\ hacia\ que\ sentido\ es\ la\ calle\ vertical\ que\ estamos\ buscando.\r\n\ Si\ el\ valor\ es\ -1,\ queremos\ encontrar\ la\ primera\ calle\ vertical\ hacia\ arriba,\ y\ si\ el\ valor\ es\ 1\ queremos\ encontrar\ la\ primera\ calle\r\n\ vertical\ hacia\ abajo\r\n\ \r\n\ @return\ El\ n\u00FAmero\ de\ casillas\ que\ hay\ hasta\ nuestro\ primer\ camino\ valido.\ Devuelve\ 0\ si\ no\ hay\ ningun\ camino.\r\n
comment7.params=contadorDer\ contadorIz
comment7.target=Coordenadas\ elegirCalleVertical(int,\ int)
comment7.text=\r\n\ Este\ m\u00E9todo\ es\ el\ encargado\ de\ elegir\ que\ calle\ vertical\ se\ tomar\u00E1\ y\ devolvera\ la\ primera\ casilla\ hacia\ esa\ calle.\r\n\ \r\n\ \r\n\ @param\ contadorDer\ La\ distancia\ a\ la\ que\ se\ encuentra\ la\ primera\ calle\ vertical\ hacia\ la\ derecha\r\n\ @param\ contadorIz\ La\ distancia\ a\ la\ que\ se\ encuentra\ la\ primera\ calle\ vertical\ hacia\ la\ izquierda\r\n\ \r\n\ @return\ casillaDer,casillaIz\ La\ siguiente\ casilla\ hacia\ la\ calle\ elegida.\r\n
comment8.params=sentidoVertical\ sentidoHorizontal\ tablero
comment8.target=int\ primeraCalleHorizontal(int,\ int,\ Tablero)
comment8.text=\r\n\ Este\ m\u00E9todo\ sirve\ para\ encontrar\ la\ primera\ calle\ horizontal\ por\ la\ que\ pueda\ circular\ el\ fantasma.\ La\ direcci\u00F3n\ de\ la\ busqueda\ se\ selecciona\ mediante\r\n\ sus\ parametros.\ Este\ m\u00E9todo\ solo\ funcionara\ correctamente\ con\ los\ siguientes\ valores\ para\ los\ parametros\:\ -1\ ,\ 1.\r\n\ \r\n\ @\ param\ sentidoVertical\ Dependiendo\ del\ valor\ del\ parametro\ buscaremos\ hacia\ una\ direcci\u00F3n\ o\ en\ otra\ la\ primera\ calle\ horizontal\ .Si\ el\ valor\r\n\ es\ -1,\ buscara\ la\ calle\ hacia\ la\ arriba,\ y\ si\ el\ valor\ es\ 1\ buscara\ la\ calle\ hacia\ abajo\r\n\ \r\n\ @param\ sentidoHorizontal\ Dependiendo\ del\ valor\ del\ parametro\ indicaremos\ hacia\ que\ sentido\ es\ la\ calle\ horizontal\ que\ estamos\ buscando.\r\n\ Si\ el\ valor\ es\ -1,\ queremos\ encontrar\ la\ primera\ calle\ horizontal\ hacia\ la\ izquierda,\ y\ si\ el\ valor\ es\ 1\ queremos\ encontrar\ la\ primera\ calle\r\n\ horizontal\ hacia\ la\ derecha\r\n\ \r\n\ @return\ El\ n\u00FAmero\ de\ casillas\ que\ hay\ hasta\ nuestro\ primer\ camino\ v\u00E1lido.\ Devuelve\ 0\ si\ no\ hay\ ningun\ camino.\r\n
comment9.params=contadorArriba\ contadorAbajo
comment9.target=Coordenadas\ elegirCalleHorizontal(int,\ int)
comment9.text=\r\n\ Este\ metodo\ es\ el\ encargado\ de\ elegir\ que\ calle\ horizontal\ se\ tomar\u00E1\ y\ devolvera\ la\ primera\ casilla\ hacia\ esa\ calle.\r\n\ \r\n\ La\ idea\ de\ escribir\ este\ metodo\ es\ para\ usarlo\ como\ apoyo\ con\ el\ metodo\ "buscarMovimientoVertical()"\ ya\ que\ as\u00ED\ evito\ tener\ que\ escribir\r\n\ lo\ mismo\ varias\ veces.\r\n\ \r\n\ @param\ contadorArriba\ La\ distancia\ a\ la\ que\ se\ encuentra\ la\ primera\ calle\ horizontal\ si\ buscamos\ hacia\ arriba\r\n\ @param\ contadorAbajo\ La\ distancia\ a\ la\ que\ se\ encuentra\ la\ primera\ calle\ horizontal\ si\ buscamos\ hacia\ abajo\r\n\ @return\ casillaArriba,casillaAbajo\ La\ prrimera\ casilla\ hacia\ la\ calle\ elegida\r\n
numComments=13
